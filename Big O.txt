In computer science, big O notation is used to classify algorithms according to how their running time or space requirements grow as the input size grows.[3] In analytic number theory, big O notation is often used to express a bound on the difference between an arithmetical function and a better understood approximation; a famous example of such a difference is the remainder term in the prime number theorem. 

Big O notation characterizes functions according to their growth rates: different functions with the same growth rate may be represented using the same O notation. 

The letter O is used because the growth rate of a function is also referred to as the order of the function. A description of a function in terms of big O notation usually only provides an upper bound on the growth rate of the function. Associated with big O notation are several related notations, using the symbols o, O, ?, and T, to describe other kinds of bounds on asymptotic growth rates. 

Big O notation is also used in many other fields to provide similar estimates. 
